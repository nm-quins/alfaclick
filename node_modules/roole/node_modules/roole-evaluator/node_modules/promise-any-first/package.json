{
  "name": "promise-any-first",
  "version": "1.0.0",
  "description": "Utility for working with an array of promises",
  "main": "lib/anyFirst.js",
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "scripts": {
    "test": "mocha --bail"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/curvedmark/promise-any-first.git"
  },
  "keywords": [
    "promise",
    "promises",
    "array"
  ],
  "author": {
    "name": "Glen Huang",
    "email": "curvedmark@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/curvedmark/promise-any-first/issues"
  },
  "dependencies": {
    "promise-now": "1.x"
  },
  "devDependencies": {
    "mocha": "1.x",
    "mocha-as-promised": "1.x"
  },
  "readme": "# promise-any-first\n\nTake an array of promises, and return a promise that fulfills with the value of the first left-most fulfilled promise in the array, or rejects with reason of first rejected promise if all promises are rejected.\n\n## Installation\n\n\tnpm install promise-any-first\n\n## Example\n\n```javascript\nvar Promise = require('promise-now');\nvar anyFirst = require('promise-any-first')\n\nvar p1 = new Promise();\nvar p2 = new Promise();\nvar p3 = new Promise();\n\nvar promise = anyFirst([p1, p2, p3]).then(function (value) {\n\tconsole.log(value); // 2\n});\n\np1.reject(1);\np3.fulfill(3);\np2.fulfill(2);\n```",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/curvedmark/promise-any-first",
  "_id": "promise-any-first@1.0.0",
  "_shasum": "66de6fa5315c7ac3b8047ba7045860bc2646dcc6",
  "_from": "promise-any-first@1.x",
  "_resolved": "https://registry.npmjs.org/promise-any-first/-/promise-any-first-1.0.0.tgz"
}
